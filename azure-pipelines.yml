trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  solution: '**/*.sln'
  project: '**/DesafioTecnicoECS.Web.csproj' 
  artifactName: 'drop'

stages:

# -------------------- BUILD ---------------------
- stage: Build
  displayName: 'Build Solution'
  jobs:
    - job: Build
      steps:
        - task: UseDotNet@2
          inputs:
            packageType: 'sdk'
            version: '8.0.x'
            installationPath: $(Agent.ToolsDirectory)/dotnet

        - task: NuGetToolInstaller@1

        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'

        - task: VSBuild@1
          inputs:
            solution: '$(solution)'
            msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true'
            platform: 'Any CPU'
            configuration: '$(buildConfiguration)'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: '$(artifactName)'

# -------------------- DEPLOY ---------------------
- stage: Deploy_DEV
  displayName: 'Deploy to DEV'
  dependsOn: Build
  condition: succeeded()
  jobs:
    - deployment: DeployWebApp
      environment: 'dev'
      strategy:
        runOnce:
          deploy:
            steps:
              - download: current
                artifact: $(artifactName)

              - task: AzureWebApp@1
                inputs:
                  azureSubscription: '<SUBSCRICAO>'
                  appType: 'webApp'
                  appName: '<APP-SERVICE-DEV>'
                  package: '$(Pipeline.Workspace)/$(artifactName)/**/*.zip'
